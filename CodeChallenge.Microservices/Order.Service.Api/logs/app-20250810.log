2025-08-10 12:58:25.560 +02:00 [INF] Resetting the database...
2025-08-10 12:58:25.912 +02:00 [ERR] An error occurred while resetting the database.
System.InvalidOperationException: The entity type 'DomainEvent' requires a primary key to be defined. If you intended to use a keyless entity type, call 'HasNoKey' in 'OnModelCreating'. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateNonNullPrimaryKeys(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.SqlServer.Infrastructure.Internal.SqlServerModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService(IInfrastructure`1 accessor, Type serviceType)
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeletedAsync(CancellationToken cancellationToken)
   at Order.Service.Api.ServiceCollectionExtensions.ResetDatabaseAsync(WebApplication app) in D:\dev\CodeChallenge.Microservices\Order.Service.Api\ServiceCollectionExtensions.cs:line 132
2025-08-10 12:58:26.288 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 12:58:26.288 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 12:58:26.295 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 12:58:26.379 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 12:58:26.379 +02:00 [INF] Hosting environment: Development
2025-08-10 12:58:26.379 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 12:58:49.244 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/swagger/v1/swagger.json - null null
2025-08-10 12:58:49.283 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 42.3291ms
2025-08-10 12:59:44.629 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/_vs/browserLink - null null
2025-08-10 12:59:44.629 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/_framework/aspnetcore-browser-refresh.js - null null
2025-08-10 12:59:44.639 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/_framework/aspnetcore-browser-refresh.js - 200 16519 application/javascript; charset=utf-8 9.6291ms
2025-08-10 12:59:44.737 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/_vs/browserLink - 200 null text/javascript; charset=UTF-8 107.7279ms
2025-08-10 12:59:44.840 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/favicon.ico - null null
2025-08-10 12:59:44.855 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/favicon.ico - 404 0 null 15.0913ms
2025-08-10 12:59:44.856 +02:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7191/favicon.ico, Response status code: 404
2025-08-10 13:01:05.344 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/orders/AEBDD0CF-8569-4217-B07F-158E9BB3FF9C - null null
2025-08-10 13:01:05.356 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:01:05.360 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-08-10 13:01:05.379 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 13:01:05.754 +02:00 [ERR] [GetOrderByIdQueryRequest] Unhandled exception
System.InvalidOperationException: The entity type 'DomainEvent' requires a primary key to be defined. If you intended to use a keyless entity type, call 'HasNoKey' in 'OnModelCreating'. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateNonNullPrimaryKeys(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.SqlServer.Infrastructure.Internal.SqlServerModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at CodeChallenge.InfrastructureLayer.OrderDbContext.get_Orders() in D:\dev\CodeChallenge.Microservices\CodeChallenge.InfrastructureLayer\OrderDbContext.cs:line 8
   at CodeChallenge.InfrastructureLayer.Services.OrderRepository.GetByIdAsync(Guid orderNumber) in D:\dev\CodeChallenge.Microservices\CodeChallenge.InfrastructureLayer\Services\OrderRepository.cs:line 17
   at Order.Service.Api.Application.RequestHandlers.Queries.GetOrderByIdQueryRequestHandler.Handle(GetOrderByIdQueryRequest request, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\Order.Service.Api\Application\RequestHandlers\Queries\GetOrderByIdQueryRequestHandler.cs:line 14
   at CodeChallenge.ApplicationLayer.Behaviors.Validators.ApiValidationBehavior`3.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\CodeChallenge.ApplicationLayer\Behaviors\Validators\ApiValidationBehavior.cs:line 34
   at CodeChallenge.ApplicationLayer.Behaviors.TrackingBehavior`3.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\CodeChallenge.ApplicationLayer\Behaviors\TrackingBehavior.cs:line 46
2025-08-10 13:01:05.817 +02:00 [ERR] Error handling GetOrderByIdQueryRequest
System.InvalidOperationException: The entity type 'DomainEvent' requires a primary key to be defined. If you intended to use a keyless entity type, call 'HasNoKey' in 'OnModelCreating'. For more information on keyless entity types, see https://go.microsoft.com/fwlink/?linkid=2141943.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateNonNullPrimaryKeys(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.SqlServer.Infrastructure.Internal.SqlServerModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at CodeChallenge.InfrastructureLayer.OrderDbContext.get_Orders() in D:\dev\CodeChallenge.Microservices\CodeChallenge.InfrastructureLayer\OrderDbContext.cs:line 8
   at CodeChallenge.InfrastructureLayer.Services.OrderRepository.GetByIdAsync(Guid orderNumber) in D:\dev\CodeChallenge.Microservices\CodeChallenge.InfrastructureLayer\Services\OrderRepository.cs:line 17
   at Order.Service.Api.Application.RequestHandlers.Queries.GetOrderByIdQueryRequestHandler.Handle(GetOrderByIdQueryRequest request, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\Order.Service.Api\Application\RequestHandlers\Queries\GetOrderByIdQueryRequestHandler.cs:line 14
   at CodeChallenge.ApplicationLayer.Behaviors.Validators.ApiValidationBehavior`3.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\CodeChallenge.ApplicationLayer\Behaviors\Validators\ApiValidationBehavior.cs:line 34
   at CodeChallenge.ApplicationLayer.Behaviors.TrackingBehavior`3.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\CodeChallenge.ApplicationLayer\Behaviors\TrackingBehavior.cs:line 46
   at CodeChallenge.ApplicationLayer.Behaviors.TrackingBehavior`3.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\CodeChallenge.ApplicationLayer\Behaviors\TrackingBehavior.cs:line 71
   at CodeChallenge.ApplicationLayer.Behaviors.LoggingBehavior`3.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\dev\CodeChallenge.Microservices\CodeChallenge.ApplicationLayer\Behaviors\LoggingBehavior.cs:line 40
2025-08-10 13:01:05.855 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:06:27.419 +02:00 [INF] Resetting the database...
2025-08-10 13:06:32.104 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 13:06:32.177 +02:00 [INF] Applying migration '20250805112344_InitialCreate'.
2025-08-10 13:06:39.415 +02:00 [INF] Database faked with default order.
2025-08-10 13:06:39.623 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 13:06:39.623 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 13:06:39.626 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 13:06:39.684 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 13:06:39.684 +02:00 [INF] Hosting environment: Development
2025-08-10 13:06:39.684 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 13:07:22.790 +02:00 [INF] Resetting the database...
2025-08-10 13:07:23.962 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 13:07:24.042 +02:00 [INF] Applying migration '20250805112344_InitialCreate'.
2025-08-10 13:07:30.301 +02:00 [INF] Database faked with default order.
2025-08-10 13:07:30.521 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 13:07:30.522 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 13:07:30.526 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 13:07:30.577 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 13:07:30.577 +02:00 [INF] Hosting environment: Development
2025-08-10 13:07:30.577 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 13:07:35.671 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/orders/AEBDD0CF-8569-4217-B07F-158E9BB3FF9C - null null
2025-08-10 13:07:35.712 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:07:35.714 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-08-10 13:07:35.730 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 13:07:55.063 +02:00 [INF] Handled GetOrderByIdQueryRequest
2025-08-10 13:07:55.066 +02:00 [INF] Setting HTTP status code 404.
2025-08-10 13:07:55.067 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:07:55.070 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/orders/AEBDD0CF-8569-4217-B07F-158E9BB3FF9C - 404 0 null 19402.9859ms
2025-08-10 13:08:27.768 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/orders/99CCE0ED-9E0E-4BF8-A3E5-011180284C7D - null null
2025-08-10 13:08:27.777 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:08:27.778 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 13:13:43.036 +02:00 [INF] Resetting the database...
2025-08-10 13:13:47.023 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 13:13:47.100 +02:00 [INF] Applying migration '20250805112344_InitialCreate'.
2025-08-10 13:13:47.395 +02:00 [INF] Database faked with default order.
2025-08-10 13:13:47.578 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 13:13:47.578 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 13:13:47.581 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 13:13:47.632 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 13:13:47.633 +02:00 [INF] Hosting environment: Development
2025-08-10 13:13:47.633 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 13:14:03.046 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/orders/99CCE0ED-9E0E-4BF8-A3E5-011180284C7D - null null
2025-08-10 13:14:03.082 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:14:03.084 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-08-10 13:14:03.100 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 13:14:13.529 +02:00 [INF] Handled GetOrderByIdQueryRequest
2025-08-10 13:14:13.542 +02:00 [INF] Setting HTTP status code 404.
2025-08-10 13:14:13.543 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:14:13.547 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/orders/99CCE0ED-9E0E-4BF8-A3E5-011180284C7D - 404 0 null 10505.2435ms
2025-08-10 13:14:25.196 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/orders/FA988FFB-ABDC-4635-B713-E6540932BF51 - null null
2025-08-10 13:14:25.197 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:14:25.197 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 13:14:25.254 +02:00 [INF] Handled GetOrderByIdQueryRequest
2025-08-10 13:14:25.255 +02:00 [INF] Setting HTTP status code 200.
2025-08-10 13:14:25.259 +02:00 [INF] Writing value of type 'OrderResponse' as Json.
2025-08-10 13:14:25.264 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:14:25.265 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/orders/FA988FFB-ABDC-4635-B713-E6540932BF51 - 200 null application/json; charset=utf-8 69.1715ms
2025-08-10 13:14:31.135 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/orders/FA988FFB-ABDC-4635-B713-E6540932BF51 - null null
2025-08-10 13:14:31.136 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:14:31.137 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 13:14:31.141 +02:00 [INF] Handled GetOrderByIdQueryRequest
2025-08-10 13:14:31.141 +02:00 [INF] Setting HTTP status code 200.
2025-08-10 13:14:31.141 +02:00 [INF] Writing value of type 'OrderResponse' as Json.
2025-08-10 13:14:31.141 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 13:14:31.141 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/orders/FA988FFB-ABDC-4635-B713-E6540932BF51 - 200 null application/json; charset=utf-8 6.7336ms
2025-08-10 13:23:50.416 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7191/orders - application/json 327
2025-08-10 13:23:50.444 +02:00 [INF] Executing endpoint 'HTTP: POST /orders'
2025-08-10 13:23:50.477 +02:00 [INF] Handling CreateOrderCommandRequest
2025-08-10 13:24:31.921 +02:00 [INF] Handled CreateOrderCommandRequest
2025-08-10 13:24:38.760 +02:00 [INF] Setting HTTP status code 201.
2025-08-10 13:24:38.761 +02:00 [INF] Writing value of type 'CreateOrderResponse' as Json.
2025-08-10 13:24:41.151 +02:00 [INF] Executed endpoint 'HTTP: POST /orders'
2025-08-10 13:24:41.151 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7191/orders - 201 null application/json; charset=utf-8 50735.0585ms
2025-08-10 15:06:01.972 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 15:06:02.042 +02:00 [INF] Applying migration '20250810130541_AddStoredEvent'.
2025-08-10 15:18:40.428 +02:00 [INF] Resetting the database...
2025-08-10 15:18:44.162 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 15:18:44.229 +02:00 [INF] Applying migration '20250805112344_InitialCreate'.
2025-08-10 15:18:44.241 +02:00 [INF] Applying migration '20250810130541_AddStoredEvent'.
2025-08-10 15:18:44.478 +02:00 [INF] Database faked with default order.
2025-08-10 15:18:44.535 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 15:18:44.535 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 15:18:44.537 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 15:18:44.576 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 15:18:44.576 +02:00 [INF] Hosting environment: Development
2025-08-10 15:18:44.576 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 15:18:47.268 +02:00 [INF] Resetting the database...
2025-08-10 15:18:48.074 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 15:18:48.151 +02:00 [INF] Applying migration '20250805112344_InitialCreate'.
2025-08-10 15:18:48.167 +02:00 [INF] Applying migration '20250810130541_AddStoredEvent'.
2025-08-10 15:18:48.424 +02:00 [INF] Database faked with default order.
2025-08-10 15:18:48.478 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 15:18:48.478 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 15:18:48.480 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 15:18:48.521 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 15:18:48.521 +02:00 [INF] Hosting environment: Development
2025-08-10 15:18:48.521 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 15:18:48.633 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7191/orders/0f8fad5b-d9cb-469f-a165-70867728950e - null null
2025-08-10 15:18:48.637 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7191/orders - application/json; charset=utf-8 null
2025-08-10 15:18:48.652 +02:00 [INF] Executing endpoint 'HTTP: POST /orders'
2025-08-10 15:18:48.660 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-08-10 15:18:48.670 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 15:18:48.674 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 15:18:48.674 +02:00 [INF] Handling CreateOrderCommandRequest
2025-08-10 15:18:48.751 +02:00 [INF] Handled CreateOrderCommandRequest
2025-08-10 15:18:48.753 +02:00 [INF] Setting HTTP status code 201.
2025-08-10 15:18:48.756 +02:00 [INF] Writing value of type 'CreateOrderResponse' as Json.
2025-08-10 15:18:48.764 +02:00 [INF] Executed endpoint 'HTTP: POST /orders'
2025-08-10 15:18:48.766 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7191/orders - 201 null application/json; charset=utf-8 129.3268ms
2025-08-10 15:18:48.788 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7191/orders/dc58b5d4-c8ae-4459-b562-ea1718d0ff97 - null null
2025-08-10 15:18:48.788 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 15:18:48.789 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 15:18:48.825 +02:00 [INF] Handled GetOrderByIdQueryRequest
2025-08-10 15:18:48.826 +02:00 [INF] Setting HTTP status code 404.
2025-08-10 15:18:48.826 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 15:18:48.826 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7191/orders/0f8fad5b-d9cb-469f-a165-70867728950e - 404 0 null 195.1389ms
2025-08-10 15:18:48.835 +02:00 [INF] Handled GetOrderByIdQueryRequest
2025-08-10 15:18:48.835 +02:00 [INF] Setting HTTP status code 200.
2025-08-10 15:18:48.837 +02:00 [INF] Writing value of type 'OrderResponse' as Json.
2025-08-10 15:18:48.839 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 15:18:48.839 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7191/orders/dc58b5d4-c8ae-4459-b562-ea1718d0ff97 - 200 null application/json; charset=utf-8 51.7322ms
2025-08-10 15:18:48.860 +02:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7191/orders/dc58b5d4-c8ae-4459-b562-ea1718d0ff97 - null null
2025-08-10 15:18:48.860 +02:00 [INF] Executing endpoint 'HTTP: DELETE /orders/{orderNumber:guid}'
2025-08-10 15:18:48.864 +02:00 [INF] Handling DeleteOrderCommandRequest
2025-08-10 15:18:48.919 +02:00 [INF] Handled DeleteOrderCommandRequest
2025-08-10 15:18:48.919 +02:00 [INF] Setting HTTP status code 204.
2025-08-10 15:18:48.919 +02:00 [INF] Executed endpoint 'HTTP: DELETE /orders/{orderNumber:guid}'
2025-08-10 15:18:48.919 +02:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7191/orders/dc58b5d4-c8ae-4459-b562-ea1718d0ff97 - 204 null null 59.1057ms
2025-08-10 15:18:48.932 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:7191/orders/f8302a98-be6d-4cb5-b4df-ea5b27fb1cb2 - null null
2025-08-10 15:18:48.933 +02:00 [INF] Executing endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 15:18:48.934 +02:00 [INF] Handling GetOrderByIdQueryRequest
2025-08-10 15:18:48.937 +02:00 [INF] Handled GetOrderByIdQueryRequest
2025-08-10 15:18:48.937 +02:00 [INF] Setting HTTP status code 404.
2025-08-10 15:18:48.937 +02:00 [INF] Executed endpoint 'HTTP: GET /orders/{orderNumber:guid}'
2025-08-10 15:18:48.937 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:7191/orders/f8302a98-be6d-4cb5-b4df-ea5b27fb1cb2 - 404 0 null 4.7871ms
2025-08-10 15:18:48.942 +02:00 [INF] Request starting HTTP/1.1 POST https://localhost:7191/orders - application/json; charset=utf-8 null
2025-08-10 15:18:48.942 +02:00 [INF] Executing endpoint 'HTTP: POST /orders'
2025-08-10 15:18:48.943 +02:00 [INF] Handling CreateOrderCommandRequest
2025-08-10 15:18:48.947 +02:00 [INF] Handled CreateOrderCommandRequest
2025-08-10 15:18:48.947 +02:00 [INF] Setting HTTP status code 201.
2025-08-10 15:18:48.947 +02:00 [INF] Writing value of type 'CreateOrderResponse' as Json.
2025-08-10 15:18:48.947 +02:00 [INF] Executed endpoint 'HTTP: POST /orders'
2025-08-10 15:18:48.947 +02:00 [INF] Request finished HTTP/1.1 POST https://localhost:7191/orders - 201 null application/json; charset=utf-8 5.3891ms
2025-08-10 15:18:48.949 +02:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7191/orders/e9f665c2-0ec1-4d12-88d9-4235e2b71a95 - null null
2025-08-10 15:18:48.950 +02:00 [INF] Executing endpoint 'HTTP: DELETE /orders/{orderNumber:guid}'
2025-08-10 15:18:48.950 +02:00 [INF] Handling DeleteOrderCommandRequest
2025-08-10 15:18:48.955 +02:00 [INF] Handled DeleteOrderCommandRequest
2025-08-10 15:18:48.955 +02:00 [INF] Setting HTTP status code 204.
2025-08-10 15:18:48.955 +02:00 [INF] Executed endpoint 'HTTP: DELETE /orders/{orderNumber:guid}'
2025-08-10 15:18:48.955 +02:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7191/orders/e9f665c2-0ec1-4d12-88d9-4235e2b71a95 - 204 null null 5.7187ms
2025-08-10 15:19:06.293 +02:00 [INF] Resetting the database...
2025-08-10 15:19:07.278 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 15:19:07.353 +02:00 [INF] Applying migration '20250805112344_InitialCreate'.
2025-08-10 15:19:07.366 +02:00 [INF] Applying migration '20250810130541_AddStoredEvent'.
2025-08-10 15:19:07.643 +02:00 [INF] Database faked with default order.
2025-08-10 15:19:07.871 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 15:19:07.871 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 15:19:07.874 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 15:19:07.923 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 15:19:07.923 +02:00 [INF] Hosting environment: Development
2025-08-10 15:19:07.923 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 15:19:41.455 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7191/orders - application/json 327
2025-08-10 15:19:41.500 +02:00 [INF] Executing endpoint 'HTTP: POST /orders'
2025-08-10 15:19:41.511 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-08-10 15:19:41.537 +02:00 [INF] Handling CreateOrderCommandRequest
2025-08-10 15:19:41.651 +02:00 [INF] Handled CreateOrderCommandRequest
2025-08-10 15:19:41.654 +02:00 [INF] Setting HTTP status code 201.
2025-08-10 15:19:41.658 +02:00 [INF] Writing value of type 'CreateOrderResponse' as Json.
2025-08-10 15:19:41.660 +02:00 [INF] Executed endpoint 'HTTP: POST /orders'
2025-08-10 15:19:41.663 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7191/orders - 201 null application/json; charset=utf-8 212.9655ms
2025-08-10 15:27:24.013 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 15:27:24.081 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-08-10 15:30:21.787 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 15:30:21.855 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-08-10 16:10:32.931 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 16:10:33.012 +02:00 [INF] Applying migration '20250810141007_InitialCreate'.
2025-08-10 16:10:51.289 +02:00 [INF] Resetting the database...
2025-08-10 16:10:52.338 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-10 16:10:52.443 +02:00 [INF] Applying migration '20250810141007_InitialCreate'.
2025-08-10 16:10:52.811 +02:00 [INF] Database faked with default order.
2025-08-10 16:10:53.036 +02:00 [INF] Now listening on: https://localhost:7191
2025-08-10 16:10:53.036 +02:00 [INF] Now listening on: http://localhost:5208
2025-08-10 16:10:53.040 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-08-10 16:10:53.199 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-08-10 16:10:53.199 +02:00 [INF] Hosting environment: Development
2025-08-10 16:10:53.199 +02:00 [INF] Content root path: D:\dev\CodeChallenge.Microservices\Order.Service.Api
2025-08-10 16:19:45.544 +02:00 [INF] Request starting HTTP/2 POST https://localhost:7191/orders - application/json 327
2025-08-10 16:19:45.590 +02:00 [INF] Executing endpoint 'HTTP: POST /orders'
2025-08-10 16:19:45.600 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-08-10 16:19:45.626 +02:00 [INF] Handling CreateOrderCommandRequest
2025-08-10 16:19:45.990 +02:00 [INF] Handled CreateOrderCommandRequest
2025-08-10 16:19:45.992 +02:00 [INF] Setting HTTP status code 201.
2025-08-10 16:19:45.997 +02:00 [INF] Writing value of type 'CreateOrderResponse' as Json.
2025-08-10 16:19:46.000 +02:00 [INF] Executed endpoint 'HTTP: POST /orders'
2025-08-10 16:19:46.003 +02:00 [INF] Request finished HTTP/2 POST https://localhost:7191/orders - 201 null application/json; charset=utf-8 462.512ms
